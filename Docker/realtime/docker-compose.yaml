services:
  client:
    image: realtime_uptime_client:latest
    restart: always
    environment:
      UPTIME_APP_API_BASE_URL: "http://64.23.225.20/api/v1"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro

  server:
    image: realtime_uptime_server:latest
    restart: always
    ports:
      - "5000:5000"
    env_file:
      - server.env
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
  redis:
    image: realtime_uptime_redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
  mongodb:
    image: realtime_uptime_database_mongo:latest
    command: ["mongod", "--quiet", "--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/data:/data/db
      # - ./mongo/init/create_users.js:/docker-entrypoint-initdb.d/create_users.js
    env_file:
      - mongo.env
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--eval",
          "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb:27017',priority:1}]}) }",
        ]
      interval: 5s
      timeout: 30s
      retries: 30
